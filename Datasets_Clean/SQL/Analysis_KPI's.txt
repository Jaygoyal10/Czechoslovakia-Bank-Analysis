SELECT DISTINCT YEAR(DATE) FROM ACCOUNT;
SELECT DISTINCT YEAR(DATE) FROM TRANSACTIONS;
SELECT DISTINCT YEAR(ISSUED) FROM CARD;
SELECT DISTINCT YEAR(DATE) FROM LOAN;

-- Updating year in the TRANSACTIONS TABLE


UPDATE TRANSACTIONS 
SET DATE = DATEADD(YEAR, 1, DATE) WHERE YEAR(DATE) = 2021;

UPDATE TRANSACTIONS 
SET DATE = DATEADD(YEAR, 1, DATE) WHERE YEAR(DATE) = 2020;
UPDATE TRANSACTIONS 
SET DATE = DATEADD(YEAR, 1, DATE) WHERE YEAR(DATE) = 2019;
UPDATE TRANSACTIONS 
SET DATE = DATEADD(YEAR, 1, DATE) WHERE YEAR(DATE) = 2018;
UPDATE TRANSACTIONS 
SET DATE = DATEADD(YEAR, 1, DATE) WHERE YEAR(DATE) = 2017;
UPDATE TRANSACTIONS 
SET DATE = DATEADD(YEAR, 1, DATE) WHERE YEAR(DATE) = 2016;

SELECT YEAR(DATE), COUNT(*) FROM TRANSACTIONS
WHERE BANK IS NULL
GROUP BY 1
ORDER BY 1 DESC;

SELECT * FROM TRANSACTIONS WHERE YEAR(DATE) = 2017;
SELECT * FROM TRANSACTIONS WHERE YEAR(DATE) = 2018;
SELECT * FROM TRANSACTIONS WHERE YEAR(DATE) = 2019;
SELECT * FROM TRANSACTIONS WHERE YEAR(DATE) = 2020;
SELECT * FROM TRANSACTIONS WHERE YEAR(DATE) = 2021;
SELECT * FROM TRANSACTIONS WHERE YEAR(DATE) = 2022;



UPDATE TRANSACTIONS 
SET Bank = 
        CASE
            WHEN YEAR(DATE) = 2017 THEN 'Southern Bank'
            WHEN YEAR(DATE) = 2018 THEN 'Northern Bank'
            WHEN YEAR(DATE) = 2019 THEN 'Central Bank'
            WHEN YEAR(DATE) = 2020 THEN 'DBS Bank'
            WHEN YEAR(DATE) = 2021 THEN 'NBS BANK'
            WHEN YEAR(DATE) = 2022 THEN 'SKY BANK'
            ELSE Bank
        END 
WHERE Bank IS NULL;


SELECT DISTINCT YEAR(DATE) FROM ACCOUNT ORDER BY 1 ;
SELECT DISTINCT YEAR(DATE) FROM TRANSACTIONS ORDER BY 1;


-- FIND MALE, FEMALE 

SELECT 
    SUM( CASE WHEN SEX = 'Male' THEN 1 END) AS MALE_CLIENT,
    SUM(CASE WHEN SEX = 'Female' THEN 1 END) AS FEMAL_CLIENT
FROM CLIENT;

-- FIND MALE, FEMALE %

SELECT 
    SUM(CASE WHEN SEX = 'Male' THEN 1 ELSE 0 END)/COUNT(*) *           100.0 AS MALE_PERC,
    SUM(CASE WHEN SEX = 'Female' THEN 1 ELSE 0 END)/COUNT(*) * 
    100.0 AS FEMALE_PERC
FROM CLIENT;


-----ADDING AGE COLUMN TO THE CLIENT TABLE
ALTER TABLE CLIENT
ADD COLUMN AGE INT;

UPDATE CLIENT
SET AGE = DATEDIFF('YEAR',BIRTH_DATE,'2022-12-19');



---1.What is the demographic profile of the bank's clients and how does it vary across districts?

CREATE OR REPLACE table czec_demographic_data_kpi as
SELECT  C.DISTRICT_ID,D.DISTRICT_NAME,D.AVERAGE_SALARY,
ROUND(AVG(C.AGE),0) AS AVG_AGE,
SUM(CASE WHEN SEX = 'Male' THEN 1 ELSE 0 END) AS MALE_CLIENT ,
SUM(CASE WHEN SEX = 'Female' THEN 1 ELSE 0 END) AS FEMALE_CLIENT ,
ROUND((FEMALE_CLIENT/MALE_CLIENT)*100,2) AS MALE_FEMALE_RATIO_PERC,
COUNT(*)AS TOTAL_CLIENT
FROM CLIENT C
INNER JOIN DISTRICT D ON C.DISTRICT_ID = D.DISTRICT_CODE
GROUP BY 1,2,3
ORDER BY 1;

SELECT * FROM CZEC_DEMOGRAPHIC_DATA_KPI;


--2. How the banks have performed over the years.Give their detailed analysis month wise?


--ASSUMING EVERY LAST MONTH CUSTOMER ACCOUNT IS GETTING TXNCTED

  SELECT ACCOUNT_ID,YEAR(DATE) AS TXN_YEAR,
   MONTH(DATE) AS TXN_MONTH,
   MAX(DATE) AS LATEST_TXN_DATE
   FROM TRANSACTIONS
   GROUP BY 1,2,3
   ORDER BY 1,2,3;

CREATE OR REPLACE TABLE ACC_LATEST_TXNS_WITH_BALANCE 
AS
    SELECT LTD.*,TXN.BALANCE
    FROM TRANSACTIONS AS TXN
    INNER JOIN 
    (
        SELECT ACCOUNT_ID,YEAR(DATE) AS TXN_YEAR,
        MONTH(DATE) AS TXN_MONTH,
        MAX(DATE) AS LATEST_TXN_DATE
        FROM TRANSACTIONS
        GROUP BY 1,2,3
        ORDER BY 1,2,3

    ) AS LTD ON TXN.ACCOUNT_ID = LTD.ACCOUNT_ID AND TXN.DATE = LTD.LATEST_TXN_DATE
WHERE TXN.TYPE = 'Credit' -- this is the assumptions am having : month end txn data is credit
ORDER BY TXN.ACCOUNT_ID, LTD.TXN_YEAR,LTD.TXN_MONTH;

select * from ACC_LATEST_TXNS_WITH_BALANCE;


SELECT LATEST_TXN_DATE,COUNT(*) AS TOT_TXNS
FROM ACC_LATEST_TXNS_WITH_BALANCE
GROUP BY 1
ORDER BY 2 DESC;

-------------------------------------------------------------------------------------------

CREATE OR REPLACE TABLE BANKING_KPI AS
SELECT  ALWB.TXN_YEAR , ALWB.TXN_MONTH,T.BANK,A.ACCOUNT_TYPE,

COUNT(DISTINCT ALWB.ACCOUNT_ID) AS TOT_ACCOUNT, 
COUNT(DISTINCT T.TRANS_ID) AS TOT_TXNS,
COUNT(CASE WHEN T.TYPE = 'Credit' THEN 1 END) AS DEPOSIT_COUNT ,
COUNT(CASE WHEN T.TYPE = 'Withdrawal' THEN 1 END) AS WITHDRAWAL_COUNT,

SUM(ALWB.BALANCE) AS TOT_BALANCE,

ROUND((DEPOSIT_COUNT / TOT_TXNS) * 100,2)  AS DEPOSIT_PERC ,
ROUND((WITHDRAWAL_COUNT / TOT_TXNS) * 100,2) AS WITHDRAWAL_PERC ,
NVL(TOT_BALANCE / TOT_ACCOUNT,0) AS AVG_BALANCE,

ROUND(TOT_TXNS/TOT_ACCOUNT,0) AS TPA

FROM TRANSACTIONS AS T
INNER JOIN  ACC_LATEST_TXNS_WITH_BALANCE AS ALWB ON T.ACCOUNT_ID = ALWB.ACCOUNT_ID
LEFT OUTER JOIN  ACCOUNT AS A ON T.ACCOUNT_ID = A.ACCOUNT_ID
GROUP BY 1,2,3,4
ORDER BY 1,2,3,4;

SELECT * FROM BANKING_KPI;

-------------------------------------------------------------------------------------------------------

SELECT TXN_YEAR, COUNT(*) AS TOTAL
FROM BANKING_KPI
GROUP BY 1
ORDER BY 2 DESC;

SELECT * FROM BANKING_KPI
ORDER BY txn_year,BANK;

SELECT * FROM TRANSACTIONS
WHERE ACCOUNT_ID = 1
ORDER BY DATE;

SELECT * FROM BANKING_KPI
where txn_year =2019;

SELECT TXN_YEAR AS TXN_YEAR, BANK, SUM(AVG_BALANCE) AS TOT_AVG_BALANCE
from BANKING_KPI
GROUP BY 1,2
ORDER BY TOT_AVG_BALANCE DESC;

SELECT * FROM TRANSACTIONS
WHERE BANK = 'Sky Bank' AND ACCOUNT_ID = 7745
ORDER BY DATE ,BANK;

SELECT * FROM TRANSACTIONS
WHERE ACCOUNT_ID = 1 AND YEAR(DATE) = 2019 AND MONTH(DATE) = 7;




SELECT * FROM ACC_LATEST_TXNS_WITH_BALANCE ;

select * from loan;

SELECT DISTINCT STATUS,SUM(AMOUNT)
FROM LOAN
GROUP BY 1
ORDER BY 1;


--What are the most common types of accounts and how do they differ in terms of usage and Profitability?

SELECT DISTINCT ACCOUNT_TYPE FROM ACCOUNT;

SELECT * FROM ACCOUNT;


SELECT ACCOUNT_TYPE, COUNT(*) AS Total_Account 
FROM ACCOUNT
GROUP BY ACCOUNT_TYPE
ORDER BY ACCOUNT_TYPE DESC;                           -- MOST COMMON ACOUNTS IS SAVING

SELECT ACNT.ACCOUNT_TYPE, TRANS.DATE, SUM(BALANCE) AS TOTAL_BALANCE
FROM ACCOUNT ACNT
INNER JOIN 
TRANSACTIONS TRANS
ON ACNT.ACCOUNT_ID = TRANS.ACCOUNT_ID
GROUP BY 1,2
ORDER BY TOTAL_BALANCE DESC;


SELECT 
  ACC.ACCOUNT_TYPE, 
  EXTRACT(YEAR FROM TXN.DATE) AS TXN_YEAR, 
  EXTRACT(MONTH FROM TXN.DATE) AS TXN_MONTH,
  SUM(TXN.BALANCE) AS TOT_BALANCE
FROM ACCOUNT ACC 
INNER JOIN TRANSACTIONS TXN 
  ON ACC.ACCOUNT_ID = TXN.ACCOUNT_ID
GROUP BY 
  ACC.ACCOUNT_TYPE, 
  EXTRACT(YEAR FROM TXN.DATE),
  EXTRACT(MONTH FROM TXN.DATE)
ORDER BY 
  TOT_BALANCE DESC;



-- 4. Which types of cards are most frequently used by the bank's clients and what is the overall profitability of the credit card business?

SELECT DISTINCT TYPE FROM CARD;


SELECT 
  C.TYPE,
  COUNT(TXN.TRANS_ID) AS NUM_TRANSACTIONS,
  SUM(TXN.AMOUNT) AS TOTAL_SPENT
FROM CARD C
JOIN TRANSACTIONS TXN ON C.CARD_ID = TXN.TRANS_ID
GROUP BY C.TYPE
ORDER BY TOTAL_SPENT DESC;


-- 5. What are the major expenses of the bank and how can they be reduced to improve profitability? 

-- 6. What is the bankâ€™s loan portfolio and how does it vary across different purposes and client segments? 


-- Loan Portfolio Summary

SELECT 
  COUNT(*) AS TOTAL_LOANS,
  SUM(AMOUNT) AS TOTAL_PORTFOLIO,
  AVG(AMOUNT) AS AVG_LOAN_AMOUNT,
  COUNT_IF(STATUS = 'BAD') AS DEFAULTED_LOANS
FROM LOAN;


-- Loan Portfolio by Client Segment (e.g., Gender)

SELECT 
  C.SEX,
  COUNT(L.LOAN_ID) AS NUM_LOANS,
  SUM(L.AMOUNT) AS TOTAL_AMOUNT,
  AVG(L.AMOUNT) AS AVG_AMOUNT,
  COUNT_IF(L.STATUS = 'BAD') AS DEFAULTS
FROM LOAN L
JOIN ACCOUNT A ON L.ACCOUNT_ID = A.ACCOUNT_ID
JOIN CLIENT C ON A.DISTRICT_ID = C.DISTRICT_ID
GROUP BY C.SEX;


-- Loan Portfolio by Age Group

SELECT 
  CASE 
    WHEN DATEDIFF(YEAR, C.BIRTH_DATE, CURRENT_DATE) < 30 THEN 'Under 30'
    WHEN DATEDIFF(YEAR, C.BIRTH_DATE, CURRENT_DATE) BETWEEN 30 AND 50 THEN '30-50'
    ELSE 'Over 50'
  END AS AGE_GROUP,
  COUNT(L.LOAN_ID) AS NUM_LOANS,
  SUM(L.AMOUNT) AS TOTAL_AMOUNT,
  COUNT_IF(L.STATUS = 'BAD') AS DEFAULTS
FROM LOAN L
JOIN ACCOUNT A ON L.ACCOUNT_ID = A.ACCOUNT_ID
JOIN CLIENT C ON A.DISTRICT_ID = C.DISTRICT_ID
GROUP BY AGE_GROUP;


-- Loan Portfolio by District or Region

SELECT 
  D.DISTRICT_NAME,
  COUNT(L.LOAN_ID) AS NUM_LOANS,
  SUM(L.AMOUNT) AS TOTAL_AMOUNT,
  COUNT_IF(L.STATUS = 'BAD') AS DEFAULTS
FROM LOAN L
JOIN ACCOUNT A ON L.ACCOUNT_ID = A.ACCOUNT_ID
JOIN CLIENT C ON A.DISTRICT_ID = C.DISTRICT_ID
JOIN DISTRICT D ON C.DISTRICT_ID = D.DISTRICT_CODE
GROUP BY D.DISTRICT_NAME
ORDER BY TOTAL_AMOUNT DESC;



SELECT 
  PURPOSE,
  COUNT(*) AS NUM_LOANS,
  SUM(AMOUNT) AS TOTAL_AMOUNT,
  COUNT_IF(STATUS = 'BAD') AS DEFAULTS
FROM LOAN
GROUP BY PURPOSE
ORDER BY TOTAL_AMOUNT DESC;



-- 7. How can the bank improve its customer service and satisfaction levels? 
-- 8. Can the bank introduce new financial products or services to attract more customers and increase profitability?
